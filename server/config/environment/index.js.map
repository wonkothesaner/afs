{"version":3,"sources":["../../../../server/config/environment/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAChC,MAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACtB,UAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,GAAG,uBAAuB,CAAC,CAAC;GACvE;AACD,SAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1B;;;;AAID,IAAI,GAAG,GAAG;AACR,KAAG,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;;;AAGzB,MAAI,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW,CAAC;;;AAG7C,MAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;;;AAG9B,IAAE,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,SAAS;;;AAG/B,QAAM,EAAE,KAAK;;;AAGb,SAAO,EAAE;AACP,WAAO,EAAE,YAAY;GACtB;;;AAGD,OAAK,EAAE;AACL,WAAO,EAAE;AACP,QAAE,EAAE;AACF,YAAI,EAAE,IAAI;OACX;KACF;GACF;;AAED,SAAO,EAAE;AACP,YAAQ,EAAM,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI;AAC5C,gBAAY,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,QAAQ;AACpD,eAAW,EAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,CAAA,GAAI,wBAAwB;GACpE;;AAED,QAAM,EAAE;AACN,YAAQ,EAAM,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,IAAI;AAC3C,gBAAY,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,QAAQ;AACnD,eAAW,EAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,CAAA,GAAI,uBAAuB;GACnE;CACF,CAAC;;;;AAIF,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CACtB,GAAG,EACH,OAAO,CAAC,UAAU,CAAC,EACnB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC","file":"index.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar _ = require('lodash');\n\nfunction requiredProcessEnv(name) {\n  if (!process.env[name]) {\n    throw new Error('You must set the ' + name + ' environment variable');\n  }\n  return process.env[name];\n}\n\n// All configurations will extend these options\n// ============================================\nvar all = {\n  env: process.env.NODE_ENV,\n\n  // Root path of server\n  root: path.normalize(__dirname + '/../../..'),\n\n  // Server port\n  port: process.env.PORT || 9000,\n\n  // Server IP\n  ip: process.env.IP || '0.0.0.0',\n\n  // Should we populate the DB with sample data?\n  seedDB: false,\n\n  // Secret for session, you will want to change this and make it an environment variable\n  secrets: {\n    session: 'afs-secret'\n  },\n\n  // MongoDB connection options\n  mongo: {\n    options: {\n      db: {\n        safe: true\n      }\n    }\n  },\n\n  twitter: {\n    clientID:     process.env.TWITTER_ID || 'id',\n    clientSecret: process.env.TWITTER_SECRET || 'secret',\n    callbackURL:  (process.env.DOMAIN || '') + '/auth/twitter/callback'\n  },\n\n  google: {\n    clientID:     process.env.GOOGLE_ID || 'id',\n    clientSecret: process.env.GOOGLE_SECRET || 'secret',\n    callbackURL:  (process.env.DOMAIN || '') + '/auth/google/callback'\n  }\n};\n\n// Export the config object based on the NODE_ENV\n// ==============================================\nmodule.exports = _.merge(\n  all,\n  require('./shared'),\n  require('./' + process.env.NODE_ENV + '.js') || {});\n"]}