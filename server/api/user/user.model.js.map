{"version":3,"sources":["../../../../server/api/user/user.model.js"],"names":[],"mappings":"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","file":"user.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nimport {Schema} from 'mongoose';\n\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\n\nvar UserSchema = new Schema({\n  name: String,\n  email: {\n    type: String,\n    lowercase: true\n  },\n  role: {\n    type: String,\n    default: 'user'\n  },\n  password: String,\n  provider: String,\n  salt: String,\n  twitter: {},\n  google: {},\n  github: {}\n});\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n  .virtual('profile')\n  .get(function() {\n    return {\n      'name': this.name,\n      'role': this.role\n    };\n  });\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n  .virtual('token')\n  .get(function() {\n    return {\n      '_id': this._id,\n      'role': this.role\n    };\n  });\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n  .path('email')\n  .validate(function(email) {\n    if (authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return email.length;\n  }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n  .path('password')\n  .validate(function(password) {\n    if (authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return password.length;\n  }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n  .path('email')\n  .validate(function(value, respond) {\n    var self = this;\n    return this.constructor.findOneAsync({ email: value })\n      .then(function(user) {\n        if (user) {\n          if (self.id === user.id) {\n            return respond(true);\n          }\n          return respond(false);\n        }\n        return respond(true);\n      })\n      .catch(function(err) {\n        throw err;\n      });\n  }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function(value) {\n  return value && value.length;\n};\n\n/**\n * Pre-save hook\n */\nUserSchema\n  .pre('save', function(next) {\n    // Handle new/update passwords\n    if (!this.isModified('password')) {\n      return next();\n    }\n\n    if (!validatePresenceOf(this.password) && authTypes.indexOf(this.provider) === -1) {\n      next(new Error('Invalid password'));\n    }\n\n    // Make salt with a callback\n    this.makeSalt((saltErr, salt) => {\n      if (saltErr) {\n        next(saltErr);\n      }\n      this.salt = salt;\n      this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\n        if (encryptErr) {\n          next(encryptErr);\n        }\n        this.password = hashedPassword;\n        next();\n      });\n    });\n  });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n  /**\n   * Authenticate - check if the passwords are the same\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {Boolean}\n   * @api public\n   */\n  authenticate(password, callback) {\n    if (!callback) {\n      return this.password === this.encryptPassword(password);\n    }\n\n    this.encryptPassword(password, (err, pwdGen) => {\n      if (err) {\n        return callback(err);\n      }\n\n      if (this.password === pwdGen) {\n        callback(null, true);\n      } else {\n        callback(null, false);\n      }\n    });\n  },\n\n  /**\n   * Make salt\n   *\n   * @param {Number} byteSize Optional salt byte size, default to 16\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  makeSalt(byteSize, callback) {\n    var defaultByteSize = 16;\n\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n      byteSize = defaultByteSize;\n    } else if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    }\n\n    if (!byteSize) {\n      byteSize = defaultByteSize;\n    }\n\n    if (!callback) {\n      return crypto.randomBytes(byteSize).toString('base64');\n    }\n\n    return crypto.randomBytes(byteSize, (err, salt) => {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, salt.toString('base64'));\n      }\n    });\n  },\n\n  /**\n   * Encrypt password\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  encryptPassword(password, callback) {\n    if (!password || !this.salt) {\n      return null;\n    }\n\n    var defaultIterations = 10000;\n    var defaultKeyLength = 64;\n    var salt = new Buffer(this.salt, 'base64');\n\n    if (!callback) {\n      return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n                   .toString('base64');\n    }\n\n    return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, (err, key) => {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, key.toString('base64'));\n      }\n    });\n  }\n};\n\nexport default mongoose.model('User', UserSchema);\n"]}